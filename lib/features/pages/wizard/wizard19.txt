import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:provider/provider.dart';
import 'dart:io';
import 'package:health/health.dart';
import '../../../core/constant/app_icons.dart';
import '../../../core/constant/app_images.dart';
import '../../../core/theme/app_text_styles.dart';
import '../../providers/wizard_provider.dart';
import '../../../core/custom_widgets/wizard_button.dart';
import 'package:app_settings/app_settings.dart';

class Wizard19 extends StatefulWidget {
  const Wizard19({super.key});

  @override
  State<Wizard19> createState() => _Wizard19State();
}

class _Wizard19State extends State<Wizard19> {
  final Health _health = Health();
  bool _showError = false;

  Future<void> _handleHealthConnect() async {
    try {
      // Check if Health Connect is available (Android specific)
      if (Platform.isAndroid) {
        final status = await _health.getHealthConnectSdkStatus();
        if (status != HealthConnectSdkStatus.sdkAvailable) {
          if (mounted) {
            ScaffoldMessenger.of(context).showSnackBar(
              SnackBar(
                content: Text('Health Connect is not installed or available on this device. Please install Google Health Connect from the Play Store.'),
                backgroundColor: Colors.red,
              ),
            );
          }
          return;
        }
      }

      // Request permissions
      final types = [
        HealthDataType.STEPS,
        HealthDataType.SLEEP_IN_BED,
        HealthDataType.HEIGHT,
        HealthDataType.WEIGHT,
      ];

      final permissions = List.generate(
        types.length,
        (index) => HealthDataAccess.READ,
      );

      final authorized = await _health.requestAuthorization(types, permissions: permissions);

      if (authorized) {
        // Try to get some data to verify connection
        final now = DateTime.now();
        final yesterday = now.subtract(const Duration(days: 1));
        
        await _health.getHealthDataFromTypes(
          types: [HealthDataType.STEPS],
          startTime: yesterday,
          endTime: now,
        );

        if (mounted) {
          Provider.of<WizardProvider>(context, listen: false).nextPage();
        }
      } else {
        if (mounted) {
          setState(() => _showError = true);
        }
      }
    } catch (e) {
      print('Error connecting to health: $e');
      if (mounted) {
        setState(() => _showError = true);
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    final colorScheme = Theme.of(context).colorScheme;
    final isIOS = Platform.isIOS;
    
    return Scaffold(
      backgroundColor: colorScheme.surface,
      body: SafeArea(
        child: Column(
          children: [
            Expanded(
              child: Padding(
                padding: EdgeInsets.symmetric(horizontal: 24.w),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    SizedBox(height: 38.h),
                    // App Title
                    Image.asset(
                      AppIcons.kali,
                      color: colorScheme.primary,
                    ),
                    SizedBox(height: 20.h),
                    
                    Text(
                      'Connect with Health apps',
                      style: AppTextStyles.headingMedium.copyWith(
                        fontWeight: FontWeight.bold,
                        color: colorScheme.onSurface,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(height: 12.h),
                    
                    Text(
                      'Sync your steps, calories, and workouts automatically\nwith ${isIOS ? 'Apple Health' : 'Google Fit'}',
                      style: AppTextStyles.bodyMedium.copyWith(
                        color: colorScheme.onSurface.withOpacity(0.7),
                      ),
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(height: 40.h),
                    
                    // Health App Card
                    Container(
                      padding: EdgeInsets.all(24.w),
                      decoration: BoxDecoration(
                        color: colorScheme.surface,
                        borderRadius: BorderRadius.circular(20.r),
                        border: Border.all(
                          color: colorScheme.outline.withOpacity(0.2),
                        ),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.05),
                            blurRadius: 10,
                            offset: const Offset(0, 4),
                          ),
                        ],
                      ),
                      child: Column(
                        children: [
                          Image.asset(
                            isIOS ? AppImages.appleHealth : AppImages.googleFit,
                            width: 60.w,
                            height: 60.w,
                          ),
                          SizedBox(height: 16.h),
                          Text(
                            isIOS ? 'Apple Health' : 'Google Fit',
                            style: AppTextStyles.headingMedium.copyWith(
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          SizedBox(height: 24.h),
                          ElevatedButton(
                            onPressed: _handleHealthConnect,
                            style: ElevatedButton.styleFrom(
                              backgroundColor: colorScheme.primary,
                              foregroundColor: colorScheme.onPrimary,
                              padding: EdgeInsets.symmetric(
                                horizontal: 32.w,
                                vertical: 12.h,
                              ),
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12.r),
                              ),
                            ),
                            child: const Text('Connect'),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
            
            // Error Message
            if (_showError)
              Container(
                width: double.infinity,
                padding: EdgeInsets.symmetric(vertical: 16.h),
                decoration: BoxDecoration(
                  color: const Color(0xFFFF3B30),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.1),
                      blurRadius: 4,
                      offset: const Offset(0, -2),
                    ),
                  ],
                ),
                child: Text(
                  'Please allow health access to sync your data',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 16.sp,
                    fontWeight: FontWeight.w500,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
            
            // Continue Button
            Padding(
              padding: EdgeInsets.all(24.h),
              child: WizardButton(
                label: 'Continue',
                onPressed: () {
                  Provider.of<WizardProvider>(context, listen: false).nextPage();
                },
                padding: EdgeInsets.symmetric(vertical: 18.h),
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  void initState() {
    super.initState();
    _showError = false;
  }
}

class _HealthAppCard extends StatelessWidget {
  final String icon;
  final String title;
  final bool isConnected;
  final bool isConnecting;
  final VoidCallback onConnect;

  const _HealthAppCard({
    required this.icon,
    required this.title,
    required this.isConnected,
    required this.isConnecting,
    required this.onConnect,
  });

  @override
  Widget build(BuildContext context) {
    final colorScheme = Theme.of(context).colorScheme;

    return Container(
      width: double.infinity,
      padding: EdgeInsets.symmetric(vertical: 28.h),
      decoration: BoxDecoration(
        color: isConnected 
            ? colorScheme.primary.withValues(alpha: 0.05)
            : colorScheme.surface,
        borderRadius: BorderRadius.circular(28.r),
        border: Border.all(
          color: isConnected 
              ? colorScheme.primary.withValues(alpha: 0.3)
              : colorScheme.outline,
          width: isConnected ? 2 : 1,
        ),
        boxShadow: [
          BoxShadow(
            color: colorScheme.shadow.withValues(alpha: 0.09),
            blurRadius: 10,
            offset: const Offset(0, 6),
          ),
        ],
      ),
      child: Column(
        children: [
          Image.asset(
            icon,
            width: 60.w,
            height: 60.w,
            fit: BoxFit.contain,
          ),
          SizedBox(height: 16.h),
          Text(
            title,
            style: AppTextStyles.bodyLarge.copyWith(
              color: colorScheme.onSurface,
              fontWeight: FontWeight.bold,
            ),
          ),
          SizedBox(height: 8.h),
          if (isConnected)
            Text(
              'Connected',
              style: AppTextStyles.bodySmall.copyWith(
                color: Colors.green,
                fontWeight: FontWeight.w500,
              ),
            ),
          SizedBox(height: 18.h),
          SizedBox(
            width: 110.w,
            height: 38.h,
            child: ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: isConnected 
                    ? Colors.green 
                    : colorScheme.primary,
                elevation: 5,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(22.r),
                ),
                padding: EdgeInsets.symmetric(vertical: 6.h),
                shadowColor: Colors.black.withValues(alpha: 0.18),
              ),
              onPressed: isConnecting ? null : onConnect,
              child: isConnecting
                  ? SizedBox(
                      width: 16.w,
                      height: 16.w,
                      child: CircularProgressIndicator(
                        strokeWidth: 2,
                        valueColor: AlwaysStoppedAnimation<Color>(
                          colorScheme.onPrimary,
                        ),
                      ),
                    )
                  : Text(
                      isConnected ? 'Reconnect' : 'Connect',
                      style: AppTextStyles.buttonText.copyWith(
                        color: colorScheme.onPrimary,
                        fontWeight: FontWeight.bold,
                        fontSize: 16.sp,
                      ),
                    ),
            ),
          ),
        ],
      ),
    );
  }
}
